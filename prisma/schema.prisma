// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  EMPLOYER
  JOBSEEKER
}

enum JobType {
  FULL_TIME
  PART_TIME
  CONTRACT
  INTERNSHIP
}

enum ExperienceLevel {
  ENTRY
  INTERMEDIATE
  SENIOR
  EXECUTIVE
}

enum ApplicationStatus {
  PENDING
  REVIEWED
  INTERVIEWED
  OFFERED
  REJECTED
}

model Profile {
  id        String   @id @default(cuid())
  role      UserRole @default(JOBSEEKER)
  bio       String?
  resumeUrl String?
  userId    String   @unique

  skills     Skill[]
  experience Experience[]
  education  Education[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  companyId String?
}

model Company {
  id          String  @id @default(cuid())
  name        String
  description String?
  website     String?
  logo        String?
  userId      String  @unique

  jobs Job[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Job {
  id             String          @id @default(cuid())
  title          String
  description    String
  requirements   String?
  benefits       String?
  qualifications String?
  location       String?
  salary         Float?
  type           JobType
  experience     ExperienceLevel
  postedById     String

  applications Application[]
  skills       Skill[]

  companyId String
  company   Company @relation(fields: [companyId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Application {
  id          String            @id @default(cuid())
  userId      String?
  status      ApplicationStatus @default(PENDING)
  coverLetter String?

  jobId String
  job   Job    @relation(fields: [jobId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Skill {
  id       String    @id @default(cuid())
  name     String    @unique
  jobs     Job[]
  profiles Profile[]
}

model Experience {
  id          String    @id @default(cuid())
  title       String
  company     String
  startDate   DateTime
  endDate     DateTime?
  description String?

  profileId String
  profile   Profile @relation(fields: [profileId], references: [id])
}

model Education {
  id           String    @id @default(cuid())
  institution  String
  degree       String
  fieldOfStudy String
  startDate    DateTime
  endDate      DateTime?

  profileId String
  profile   Profile @relation(fields: [profileId], references: [id])
}
